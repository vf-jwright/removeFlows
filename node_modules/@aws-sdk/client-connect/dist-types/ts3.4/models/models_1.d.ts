import { MetadataBearer as $MetadataBearer, SmithyException as __SmithyException } from "@aws-sdk/types";
import { AgentStatusState, ContactFlowModuleState, ContactFlowState, HoursOfOperationConfig, InstanceAttributeType, InstanceStorageConfig, InstanceStorageResourceType, MediaConcurrency, OutboundCallerConfig, QueueStatus, QuickConnectConfig, ReferenceType, RoutingProfileQueueConfig, UserIdentityInfo, UserPhoneConfig } from "./models_0";

export interface OutboundContactNotPermittedException extends __SmithyException, $MetadataBearer {
    name: "OutboundContactNotPermittedException";
    $fault: "client";
    
    Message?: string;
}

export interface AnswerMachineDetectionConfig {
    
    EnableAnswerMachineDetection?: boolean;
    
    AwaitAnswerMachinePrompt?: boolean;
}
export declare namespace AnswerMachineDetectionConfig {
    
    const filterSensitiveLog: (obj: AnswerMachineDetectionConfig) => any;
}
export declare enum TrafficType {
    CAMPAIGN = "CAMPAIGN",
    GENERAL = "GENERAL"
}
export interface StartOutboundVoiceContactRequest {
    
    DestinationPhoneNumber: string | undefined;
    
    ContactFlowId: string | undefined;
    
    InstanceId: string | undefined;
    
    ClientToken?: string;
    
    SourcePhoneNumber?: string;
    
    QueueId?: string;
    
    Attributes?: {
        [key: string]: string;
    };
    
    AnswerMachineDetectionConfig?: AnswerMachineDetectionConfig;
    
    CampaignId?: string;
    
    TrafficType?: TrafficType | string;
}
export declare namespace StartOutboundVoiceContactRequest {
    
    const filterSensitiveLog: (obj: StartOutboundVoiceContactRequest) => any;
}
export interface StartOutboundVoiceContactResponse {
    
    ContactId?: string;
}
export declare namespace StartOutboundVoiceContactResponse {
    
    const filterSensitiveLog: (obj: StartOutboundVoiceContactResponse) => any;
}

export interface Reference {
    
    Value: string | undefined;
    
    Type: ReferenceType | string | undefined;
}
export declare namespace Reference {
    
    const filterSensitiveLog: (obj: Reference) => any;
}
export interface StartTaskContactRequest {
    
    InstanceId: string | undefined;
    
    PreviousContactId?: string;
    
    ContactFlowId: string | undefined;
    
    Attributes?: {
        [key: string]: string;
    };
    
    Name: string | undefined;
    
    References?: {
        [key: string]: Reference;
    };
    
    Description?: string;
    
    ClientToken?: string;
    
    ScheduledTime?: Date;
}
export declare namespace StartTaskContactRequest {
    
    const filterSensitiveLog: (obj: StartTaskContactRequest) => any;
}
export interface StartTaskContactResponse {
    
    ContactId?: string;
}
export declare namespace StartTaskContactResponse {
    
    const filterSensitiveLog: (obj: StartTaskContactResponse) => any;
}

export interface ContactNotFoundException extends __SmithyException, $MetadataBearer {
    name: "ContactNotFoundException";
    $fault: "client";
    
    Message?: string;
}
export interface StopContactRequest {
    
    ContactId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace StopContactRequest {
    
    const filterSensitiveLog: (obj: StopContactRequest) => any;
}
export interface StopContactResponse {
}
export declare namespace StopContactResponse {
    
    const filterSensitiveLog: (obj: StopContactResponse) => any;
}
export interface StopContactRecordingRequest {
    
    InstanceId: string | undefined;
    
    ContactId: string | undefined;
    
    InitialContactId: string | undefined;
}
export declare namespace StopContactRecordingRequest {
    
    const filterSensitiveLog: (obj: StopContactRecordingRequest) => any;
}
export interface StopContactRecordingResponse {
}
export declare namespace StopContactRecordingResponse {
    
    const filterSensitiveLog: (obj: StopContactRecordingResponse) => any;
}
export interface StopContactStreamingRequest {
    
    InstanceId: string | undefined;
    
    ContactId: string | undefined;
    
    StreamingId: string | undefined;
}
export declare namespace StopContactStreamingRequest {
    
    const filterSensitiveLog: (obj: StopContactStreamingRequest) => any;
}
export interface StopContactStreamingResponse {
}
export declare namespace StopContactStreamingResponse {
    
    const filterSensitiveLog: (obj: StopContactStreamingResponse) => any;
}
export interface SuspendContactRecordingRequest {
    
    InstanceId: string | undefined;
    
    ContactId: string | undefined;
    
    InitialContactId: string | undefined;
}
export declare namespace SuspendContactRecordingRequest {
    
    const filterSensitiveLog: (obj: SuspendContactRecordingRequest) => any;
}
export interface SuspendContactRecordingResponse {
}
export declare namespace SuspendContactRecordingResponse {
    
    const filterSensitiveLog: (obj: SuspendContactRecordingResponse) => any;
}
export interface TagResourceRequest {
    
    resourceArn: string | undefined;
    
    tags: {
        [key: string]: string;
    } | undefined;
}
export declare namespace TagResourceRequest {
    
    const filterSensitiveLog: (obj: TagResourceRequest) => any;
}
export interface UntagResourceRequest {
    
    resourceArn: string | undefined;
    
    tagKeys: string[] | undefined;
}
export declare namespace UntagResourceRequest {
    
    const filterSensitiveLog: (obj: UntagResourceRequest) => any;
}
export interface UpdateAgentStatusRequest {
    
    InstanceId: string | undefined;
    
    AgentStatusId: string | undefined;
    
    Name?: string;
    
    Description?: string;
    
    State?: AgentStatusState | string;
    
    DisplayOrder?: number;
    
    ResetOrderNumber?: boolean;
}
export declare namespace UpdateAgentStatusRequest {
    
    const filterSensitiveLog: (obj: UpdateAgentStatusRequest) => any;
}
export interface UpdateContactRequest {
    
    InstanceId: string | undefined;
    
    ContactId: string | undefined;
    
    Name?: string;
    
    Description?: string;
    
    References?: {
        [key: string]: Reference;
    };
}
export declare namespace UpdateContactRequest {
    
    const filterSensitiveLog: (obj: UpdateContactRequest) => any;
}
export interface UpdateContactResponse {
}
export declare namespace UpdateContactResponse {
    
    const filterSensitiveLog: (obj: UpdateContactResponse) => any;
}
export interface UpdateContactAttributesRequest {
    
    InitialContactId: string | undefined;
    
    InstanceId: string | undefined;
    
    Attributes: {
        [key: string]: string;
    } | undefined;
}
export declare namespace UpdateContactAttributesRequest {
    
    const filterSensitiveLog: (obj: UpdateContactAttributesRequest) => any;
}
export interface UpdateContactAttributesResponse {
}
export declare namespace UpdateContactAttributesResponse {
    
    const filterSensitiveLog: (obj: UpdateContactAttributesResponse) => any;
}
export interface UpdateContactFlowContentRequest {
    
    InstanceId: string | undefined;
    
    ContactFlowId: string | undefined;
    
    Content: string | undefined;
}
export declare namespace UpdateContactFlowContentRequest {
    
    const filterSensitiveLog: (obj: UpdateContactFlowContentRequest) => any;
}
export interface UpdateContactFlowMetadataRequest {
    
    InstanceId: string | undefined;
    
    ContactFlowId: string | undefined;
    
    Name?: string;
    
    Description?: string;
    
    ContactFlowState?: ContactFlowState | string;
}
export declare namespace UpdateContactFlowMetadataRequest {
    
    const filterSensitiveLog: (obj: UpdateContactFlowMetadataRequest) => any;
}
export interface UpdateContactFlowModuleContentRequest {
    
    InstanceId: string | undefined;
    
    ContactFlowModuleId: string | undefined;
    
    Content: string | undefined;
}
export declare namespace UpdateContactFlowModuleContentRequest {
    
    const filterSensitiveLog: (obj: UpdateContactFlowModuleContentRequest) => any;
}
export interface UpdateContactFlowModuleContentResponse {
}
export declare namespace UpdateContactFlowModuleContentResponse {
    
    const filterSensitiveLog: (obj: UpdateContactFlowModuleContentResponse) => any;
}
export interface UpdateContactFlowModuleMetadataRequest {
    
    InstanceId: string | undefined;
    
    ContactFlowModuleId: string | undefined;
    
    Name?: string;
    
    Description?: string;
    
    State?: ContactFlowModuleState | string;
}
export declare namespace UpdateContactFlowModuleMetadataRequest {
    
    const filterSensitiveLog: (obj: UpdateContactFlowModuleMetadataRequest) => any;
}
export interface UpdateContactFlowModuleMetadataResponse {
}
export declare namespace UpdateContactFlowModuleMetadataResponse {
    
    const filterSensitiveLog: (obj: UpdateContactFlowModuleMetadataResponse) => any;
}
export interface UpdateContactFlowNameRequest {
    
    InstanceId: string | undefined;
    
    ContactFlowId: string | undefined;
    
    Name?: string;
    
    Description?: string;
}
export declare namespace UpdateContactFlowNameRequest {
    
    const filterSensitiveLog: (obj: UpdateContactFlowNameRequest) => any;
}
export interface UpdateContactScheduleRequest {
    
    InstanceId: string | undefined;
    
    ContactId: string | undefined;
    
    ScheduledTime: Date | undefined;
}
export declare namespace UpdateContactScheduleRequest {
    
    const filterSensitiveLog: (obj: UpdateContactScheduleRequest) => any;
}
export interface UpdateContactScheduleResponse {
}
export declare namespace UpdateContactScheduleResponse {
    
    const filterSensitiveLog: (obj: UpdateContactScheduleResponse) => any;
}
export interface UpdateHoursOfOperationRequest {
    
    InstanceId: string | undefined;
    
    HoursOfOperationId: string | undefined;
    
    Name?: string;
    
    Description?: string;
    
    TimeZone?: string;
    
    Config?: HoursOfOperationConfig[];
}
export declare namespace UpdateHoursOfOperationRequest {
    
    const filterSensitiveLog: (obj: UpdateHoursOfOperationRequest) => any;
}
export interface UpdateInstanceAttributeRequest {
    
    InstanceId: string | undefined;
    
    AttributeType: InstanceAttributeType | string | undefined;
    
    Value: string | undefined;
}
export declare namespace UpdateInstanceAttributeRequest {
    
    const filterSensitiveLog: (obj: UpdateInstanceAttributeRequest) => any;
}
export interface UpdateInstanceStorageConfigRequest {
    
    InstanceId: string | undefined;
    
    AssociationId: string | undefined;
    
    ResourceType: InstanceStorageResourceType | string | undefined;
    
    StorageConfig: InstanceStorageConfig | undefined;
}
export declare namespace UpdateInstanceStorageConfigRequest {
    
    const filterSensitiveLog: (obj: UpdateInstanceStorageConfigRequest) => any;
}
export interface UpdateQueueHoursOfOperationRequest {
    
    InstanceId: string | undefined;
    
    QueueId: string | undefined;
    
    HoursOfOperationId: string | undefined;
}
export declare namespace UpdateQueueHoursOfOperationRequest {
    
    const filterSensitiveLog: (obj: UpdateQueueHoursOfOperationRequest) => any;
}
export interface UpdateQueueMaxContactsRequest {
    
    InstanceId: string | undefined;
    
    QueueId: string | undefined;
    
    MaxContacts?: number;
}
export declare namespace UpdateQueueMaxContactsRequest {
    
    const filterSensitiveLog: (obj: UpdateQueueMaxContactsRequest) => any;
}
export interface UpdateQueueNameRequest {
    
    InstanceId: string | undefined;
    
    QueueId: string | undefined;
    
    Name?: string;
    
    Description?: string;
}
export declare namespace UpdateQueueNameRequest {
    
    const filterSensitiveLog: (obj: UpdateQueueNameRequest) => any;
}
export interface UpdateQueueOutboundCallerConfigRequest {
    
    InstanceId: string | undefined;
    
    QueueId: string | undefined;
    
    OutboundCallerConfig: OutboundCallerConfig | undefined;
}
export declare namespace UpdateQueueOutboundCallerConfigRequest {
    
    const filterSensitiveLog: (obj: UpdateQueueOutboundCallerConfigRequest) => any;
}
export interface UpdateQueueStatusRequest {
    
    InstanceId: string | undefined;
    
    QueueId: string | undefined;
    
    Status: QueueStatus | string | undefined;
}
export declare namespace UpdateQueueStatusRequest {
    
    const filterSensitiveLog: (obj: UpdateQueueStatusRequest) => any;
}
export interface UpdateQuickConnectConfigRequest {
    
    InstanceId: string | undefined;
    
    QuickConnectId: string | undefined;
    
    QuickConnectConfig: QuickConnectConfig | undefined;
}
export declare namespace UpdateQuickConnectConfigRequest {
    
    const filterSensitiveLog: (obj: UpdateQuickConnectConfigRequest) => any;
}
export interface UpdateQuickConnectNameRequest {
    
    InstanceId: string | undefined;
    
    QuickConnectId: string | undefined;
    
    Name?: string;
    
    Description?: string;
}
export declare namespace UpdateQuickConnectNameRequest {
    
    const filterSensitiveLog: (obj: UpdateQuickConnectNameRequest) => any;
}
export interface UpdateRoutingProfileConcurrencyRequest {
    
    InstanceId: string | undefined;
    
    RoutingProfileId: string | undefined;
    
    MediaConcurrencies: MediaConcurrency[] | undefined;
}
export declare namespace UpdateRoutingProfileConcurrencyRequest {
    
    const filterSensitiveLog: (obj: UpdateRoutingProfileConcurrencyRequest) => any;
}
export interface UpdateRoutingProfileDefaultOutboundQueueRequest {
    
    InstanceId: string | undefined;
    
    RoutingProfileId: string | undefined;
    
    DefaultOutboundQueueId: string | undefined;
}
export declare namespace UpdateRoutingProfileDefaultOutboundQueueRequest {
    
    const filterSensitiveLog: (obj: UpdateRoutingProfileDefaultOutboundQueueRequest) => any;
}
export interface UpdateRoutingProfileNameRequest {
    
    InstanceId: string | undefined;
    
    RoutingProfileId: string | undefined;
    
    Name?: string;
    
    Description?: string;
}
export declare namespace UpdateRoutingProfileNameRequest {
    
    const filterSensitiveLog: (obj: UpdateRoutingProfileNameRequest) => any;
}
export interface UpdateRoutingProfileQueuesRequest {
    
    InstanceId: string | undefined;
    
    RoutingProfileId: string | undefined;
    
    QueueConfigs: RoutingProfileQueueConfig[] | undefined;
}
export declare namespace UpdateRoutingProfileQueuesRequest {
    
    const filterSensitiveLog: (obj: UpdateRoutingProfileQueuesRequest) => any;
}
export interface UpdateSecurityProfileRequest {
    
    Description?: string;
    
    Permissions?: string[];
    
    SecurityProfileId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateSecurityProfileRequest {
    
    const filterSensitiveLog: (obj: UpdateSecurityProfileRequest) => any;
}
export interface UpdateUserHierarchyRequest {
    
    HierarchyGroupId?: string;
    
    UserId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserHierarchyRequest {
    
    const filterSensitiveLog: (obj: UpdateUserHierarchyRequest) => any;
}
export interface UpdateUserHierarchyGroupNameRequest {
    
    Name: string | undefined;
    
    HierarchyGroupId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserHierarchyGroupNameRequest {
    
    const filterSensitiveLog: (obj: UpdateUserHierarchyGroupNameRequest) => any;
}

export interface HierarchyLevelUpdate {
    
    Name: string | undefined;
}
export declare namespace HierarchyLevelUpdate {
    
    const filterSensitiveLog: (obj: HierarchyLevelUpdate) => any;
}

export interface HierarchyStructureUpdate {
    
    LevelOne?: HierarchyLevelUpdate;
    
    LevelTwo?: HierarchyLevelUpdate;
    
    LevelThree?: HierarchyLevelUpdate;
    
    LevelFour?: HierarchyLevelUpdate;
    
    LevelFive?: HierarchyLevelUpdate;
}
export declare namespace HierarchyStructureUpdate {
    
    const filterSensitiveLog: (obj: HierarchyStructureUpdate) => any;
}
export interface UpdateUserHierarchyStructureRequest {
    
    HierarchyStructure: HierarchyStructureUpdate | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserHierarchyStructureRequest {
    
    const filterSensitiveLog: (obj: UpdateUserHierarchyStructureRequest) => any;
}
export interface UpdateUserIdentityInfoRequest {
    
    IdentityInfo: UserIdentityInfo | undefined;
    
    UserId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserIdentityInfoRequest {
    
    const filterSensitiveLog: (obj: UpdateUserIdentityInfoRequest) => any;
}
export interface UpdateUserPhoneConfigRequest {
    
    PhoneConfig: UserPhoneConfig | undefined;
    
    UserId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserPhoneConfigRequest {
    
    const filterSensitiveLog: (obj: UpdateUserPhoneConfigRequest) => any;
}
export interface UpdateUserRoutingProfileRequest {
    
    RoutingProfileId: string | undefined;
    
    UserId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserRoutingProfileRequest {
    
    const filterSensitiveLog: (obj: UpdateUserRoutingProfileRequest) => any;
}
export interface UpdateUserSecurityProfilesRequest {
    
    SecurityProfileIds: string[] | undefined;
    
    UserId: string | undefined;
    
    InstanceId: string | undefined;
}
export declare namespace UpdateUserSecurityProfilesRequest {
    
    const filterSensitiveLog: (obj: UpdateUserSecurityProfilesRequest) => any;
}
