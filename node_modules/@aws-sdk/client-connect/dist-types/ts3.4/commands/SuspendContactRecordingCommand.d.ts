import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConnectClient";
import { SuspendContactRecordingRequest, SuspendContactRecordingResponse } from "../models/models_1";
export interface SuspendContactRecordingCommandInput extends SuspendContactRecordingRequest {
}
export interface SuspendContactRecordingCommandOutput extends SuspendContactRecordingResponse, __MetadataBearer {
}

export declare class SuspendContactRecordingCommand extends $Command<SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput, ConnectClientResolvedConfig> {
    readonly input: SuspendContactRecordingCommandInput;
    constructor(input: SuspendContactRecordingCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput>;
    private serialize;
    private deserialize;
}
