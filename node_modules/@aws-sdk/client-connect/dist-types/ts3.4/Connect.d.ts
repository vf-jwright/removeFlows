import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { AssociateApprovedOriginCommandInput, AssociateApprovedOriginCommandOutput } from "./commands/AssociateApprovedOriginCommand";
import { AssociateBotCommandInput, AssociateBotCommandOutput } from "./commands/AssociateBotCommand";
import { AssociateDefaultVocabularyCommandInput, AssociateDefaultVocabularyCommandOutput } from "./commands/AssociateDefaultVocabularyCommand";
import { AssociateInstanceStorageConfigCommandInput, AssociateInstanceStorageConfigCommandOutput } from "./commands/AssociateInstanceStorageConfigCommand";
import { AssociateLambdaFunctionCommandInput, AssociateLambdaFunctionCommandOutput } from "./commands/AssociateLambdaFunctionCommand";
import { AssociateLexBotCommandInput, AssociateLexBotCommandOutput } from "./commands/AssociateLexBotCommand";
import { AssociateQueueQuickConnectsCommandInput, AssociateQueueQuickConnectsCommandOutput } from "./commands/AssociateQueueQuickConnectsCommand";
import { AssociateRoutingProfileQueuesCommandInput, AssociateRoutingProfileQueuesCommandOutput } from "./commands/AssociateRoutingProfileQueuesCommand";
import { AssociateSecurityKeyCommandInput, AssociateSecurityKeyCommandOutput } from "./commands/AssociateSecurityKeyCommand";
import { CreateAgentStatusCommandInput, CreateAgentStatusCommandOutput } from "./commands/CreateAgentStatusCommand";
import { CreateContactFlowCommandInput, CreateContactFlowCommandOutput } from "./commands/CreateContactFlowCommand";
import { CreateContactFlowModuleCommandInput, CreateContactFlowModuleCommandOutput } from "./commands/CreateContactFlowModuleCommand";
import { CreateHoursOfOperationCommandInput, CreateHoursOfOperationCommandOutput } from "./commands/CreateHoursOfOperationCommand";
import { CreateInstanceCommandInput, CreateInstanceCommandOutput } from "./commands/CreateInstanceCommand";
import { CreateIntegrationAssociationCommandInput, CreateIntegrationAssociationCommandOutput } from "./commands/CreateIntegrationAssociationCommand";
import { CreateQueueCommandInput, CreateQueueCommandOutput } from "./commands/CreateQueueCommand";
import { CreateQuickConnectCommandInput, CreateQuickConnectCommandOutput } from "./commands/CreateQuickConnectCommand";
import { CreateRoutingProfileCommandInput, CreateRoutingProfileCommandOutput } from "./commands/CreateRoutingProfileCommand";
import { CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput } from "./commands/CreateSecurityProfileCommand";
import { CreateUseCaseCommandInput, CreateUseCaseCommandOutput } from "./commands/CreateUseCaseCommand";
import { CreateUserCommandInput, CreateUserCommandOutput } from "./commands/CreateUserCommand";
import { CreateUserHierarchyGroupCommandInput, CreateUserHierarchyGroupCommandOutput } from "./commands/CreateUserHierarchyGroupCommand";
import { CreateVocabularyCommandInput, CreateVocabularyCommandOutput } from "./commands/CreateVocabularyCommand";
import { DeleteContactFlowCommandInput, DeleteContactFlowCommandOutput } from "./commands/DeleteContactFlowCommand";
import { DeleteContactFlowModuleCommandInput, DeleteContactFlowModuleCommandOutput } from "./commands/DeleteContactFlowModuleCommand";
import { DeleteHoursOfOperationCommandInput, DeleteHoursOfOperationCommandOutput } from "./commands/DeleteHoursOfOperationCommand";
import { DeleteInstanceCommandInput, DeleteInstanceCommandOutput } from "./commands/DeleteInstanceCommand";
import { DeleteIntegrationAssociationCommandInput, DeleteIntegrationAssociationCommandOutput } from "./commands/DeleteIntegrationAssociationCommand";
import { DeleteQuickConnectCommandInput, DeleteQuickConnectCommandOutput } from "./commands/DeleteQuickConnectCommand";
import { DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput } from "./commands/DeleteSecurityProfileCommand";
import { DeleteUseCaseCommandInput, DeleteUseCaseCommandOutput } from "./commands/DeleteUseCaseCommand";
import { DeleteUserCommandInput, DeleteUserCommandOutput } from "./commands/DeleteUserCommand";
import { DeleteUserHierarchyGroupCommandInput, DeleteUserHierarchyGroupCommandOutput } from "./commands/DeleteUserHierarchyGroupCommand";
import { DeleteVocabularyCommandInput, DeleteVocabularyCommandOutput } from "./commands/DeleteVocabularyCommand";
import { DescribeAgentStatusCommandInput, DescribeAgentStatusCommandOutput } from "./commands/DescribeAgentStatusCommand";
import { DescribeContactCommandInput, DescribeContactCommandOutput } from "./commands/DescribeContactCommand";
import { DescribeContactFlowCommandInput, DescribeContactFlowCommandOutput } from "./commands/DescribeContactFlowCommand";
import { DescribeContactFlowModuleCommandInput, DescribeContactFlowModuleCommandOutput } from "./commands/DescribeContactFlowModuleCommand";
import { DescribeHoursOfOperationCommandInput, DescribeHoursOfOperationCommandOutput } from "./commands/DescribeHoursOfOperationCommand";
import { DescribeInstanceAttributeCommandInput, DescribeInstanceAttributeCommandOutput } from "./commands/DescribeInstanceAttributeCommand";
import { DescribeInstanceCommandInput, DescribeInstanceCommandOutput } from "./commands/DescribeInstanceCommand";
import { DescribeInstanceStorageConfigCommandInput, DescribeInstanceStorageConfigCommandOutput } from "./commands/DescribeInstanceStorageConfigCommand";
import { DescribeQueueCommandInput, DescribeQueueCommandOutput } from "./commands/DescribeQueueCommand";
import { DescribeQuickConnectCommandInput, DescribeQuickConnectCommandOutput } from "./commands/DescribeQuickConnectCommand";
import { DescribeRoutingProfileCommandInput, DescribeRoutingProfileCommandOutput } from "./commands/DescribeRoutingProfileCommand";
import { DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput } from "./commands/DescribeSecurityProfileCommand";
import { DescribeUserCommandInput, DescribeUserCommandOutput } from "./commands/DescribeUserCommand";
import { DescribeUserHierarchyGroupCommandInput, DescribeUserHierarchyGroupCommandOutput } from "./commands/DescribeUserHierarchyGroupCommand";
import { DescribeUserHierarchyStructureCommandInput, DescribeUserHierarchyStructureCommandOutput } from "./commands/DescribeUserHierarchyStructureCommand";
import { DescribeVocabularyCommandInput, DescribeVocabularyCommandOutput } from "./commands/DescribeVocabularyCommand";
import { DisassociateApprovedOriginCommandInput, DisassociateApprovedOriginCommandOutput } from "./commands/DisassociateApprovedOriginCommand";
import { DisassociateBotCommandInput, DisassociateBotCommandOutput } from "./commands/DisassociateBotCommand";
import { DisassociateInstanceStorageConfigCommandInput, DisassociateInstanceStorageConfigCommandOutput } from "./commands/DisassociateInstanceStorageConfigCommand";
import { DisassociateLambdaFunctionCommandInput, DisassociateLambdaFunctionCommandOutput } from "./commands/DisassociateLambdaFunctionCommand";
import { DisassociateLexBotCommandInput, DisassociateLexBotCommandOutput } from "./commands/DisassociateLexBotCommand";
import { DisassociateQueueQuickConnectsCommandInput, DisassociateQueueQuickConnectsCommandOutput } from "./commands/DisassociateQueueQuickConnectsCommand";
import { DisassociateRoutingProfileQueuesCommandInput, DisassociateRoutingProfileQueuesCommandOutput } from "./commands/DisassociateRoutingProfileQueuesCommand";
import { DisassociateSecurityKeyCommandInput, DisassociateSecurityKeyCommandOutput } from "./commands/DisassociateSecurityKeyCommand";
import { GetContactAttributesCommandInput, GetContactAttributesCommandOutput } from "./commands/GetContactAttributesCommand";
import { GetCurrentMetricDataCommandInput, GetCurrentMetricDataCommandOutput } from "./commands/GetCurrentMetricDataCommand";
import { GetFederationTokenCommandInput, GetFederationTokenCommandOutput } from "./commands/GetFederationTokenCommand";
import { GetMetricDataCommandInput, GetMetricDataCommandOutput } from "./commands/GetMetricDataCommand";
import { ListAgentStatusesCommandInput, ListAgentStatusesCommandOutput } from "./commands/ListAgentStatusesCommand";
import { ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput } from "./commands/ListApprovedOriginsCommand";
import { ListBotsCommandInput, ListBotsCommandOutput } from "./commands/ListBotsCommand";
import { ListContactFlowModulesCommandInput, ListContactFlowModulesCommandOutput } from "./commands/ListContactFlowModulesCommand";
import { ListContactFlowsCommandInput, ListContactFlowsCommandOutput } from "./commands/ListContactFlowsCommand";
import { ListContactReferencesCommandInput, ListContactReferencesCommandOutput } from "./commands/ListContactReferencesCommand";
import { ListDefaultVocabulariesCommandInput, ListDefaultVocabulariesCommandOutput } from "./commands/ListDefaultVocabulariesCommand";
import { ListHoursOfOperationsCommandInput, ListHoursOfOperationsCommandOutput } from "./commands/ListHoursOfOperationsCommand";
import { ListInstanceAttributesCommandInput, ListInstanceAttributesCommandOutput } from "./commands/ListInstanceAttributesCommand";
import { ListInstancesCommandInput, ListInstancesCommandOutput } from "./commands/ListInstancesCommand";
import { ListInstanceStorageConfigsCommandInput, ListInstanceStorageConfigsCommandOutput } from "./commands/ListInstanceStorageConfigsCommand";
import { ListIntegrationAssociationsCommandInput, ListIntegrationAssociationsCommandOutput } from "./commands/ListIntegrationAssociationsCommand";
import { ListLambdaFunctionsCommandInput, ListLambdaFunctionsCommandOutput } from "./commands/ListLambdaFunctionsCommand";
import { ListLexBotsCommandInput, ListLexBotsCommandOutput } from "./commands/ListLexBotsCommand";
import { ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput } from "./commands/ListPhoneNumbersCommand";
import { ListPromptsCommandInput, ListPromptsCommandOutput } from "./commands/ListPromptsCommand";
import { ListQueueQuickConnectsCommandInput, ListQueueQuickConnectsCommandOutput } from "./commands/ListQueueQuickConnectsCommand";
import { ListQueuesCommandInput, ListQueuesCommandOutput } from "./commands/ListQueuesCommand";
import { ListQuickConnectsCommandInput, ListQuickConnectsCommandOutput } from "./commands/ListQuickConnectsCommand";
import { ListRoutingProfileQueuesCommandInput, ListRoutingProfileQueuesCommandOutput } from "./commands/ListRoutingProfileQueuesCommand";
import { ListRoutingProfilesCommandInput, ListRoutingProfilesCommandOutput } from "./commands/ListRoutingProfilesCommand";
import { ListSecurityKeysCommandInput, ListSecurityKeysCommandOutput } from "./commands/ListSecurityKeysCommand";
import { ListSecurityProfilePermissionsCommandInput, ListSecurityProfilePermissionsCommandOutput } from "./commands/ListSecurityProfilePermissionsCommand";
import { ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput } from "./commands/ListSecurityProfilesCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { ListUseCasesCommandInput, ListUseCasesCommandOutput } from "./commands/ListUseCasesCommand";
import { ListUserHierarchyGroupsCommandInput, ListUserHierarchyGroupsCommandOutput } from "./commands/ListUserHierarchyGroupsCommand";
import { ListUsersCommandInput, ListUsersCommandOutput } from "./commands/ListUsersCommand";
import { ResumeContactRecordingCommandInput, ResumeContactRecordingCommandOutput } from "./commands/ResumeContactRecordingCommand";
import { SearchVocabulariesCommandInput, SearchVocabulariesCommandOutput } from "./commands/SearchVocabulariesCommand";
import { StartChatContactCommandInput, StartChatContactCommandOutput } from "./commands/StartChatContactCommand";
import { StartContactRecordingCommandInput, StartContactRecordingCommandOutput } from "./commands/StartContactRecordingCommand";
import { StartContactStreamingCommandInput, StartContactStreamingCommandOutput } from "./commands/StartContactStreamingCommand";
import { StartOutboundVoiceContactCommandInput, StartOutboundVoiceContactCommandOutput } from "./commands/StartOutboundVoiceContactCommand";
import { StartTaskContactCommandInput, StartTaskContactCommandOutput } from "./commands/StartTaskContactCommand";
import { StopContactCommandInput, StopContactCommandOutput } from "./commands/StopContactCommand";
import { StopContactRecordingCommandInput, StopContactRecordingCommandOutput } from "./commands/StopContactRecordingCommand";
import { StopContactStreamingCommandInput, StopContactStreamingCommandOutput } from "./commands/StopContactStreamingCommand";
import { SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput } from "./commands/SuspendContactRecordingCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateAgentStatusCommandInput, UpdateAgentStatusCommandOutput } from "./commands/UpdateAgentStatusCommand";
import { UpdateContactAttributesCommandInput, UpdateContactAttributesCommandOutput } from "./commands/UpdateContactAttributesCommand";
import { UpdateContactCommandInput, UpdateContactCommandOutput } from "./commands/UpdateContactCommand";
import { UpdateContactFlowContentCommandInput, UpdateContactFlowContentCommandOutput } from "./commands/UpdateContactFlowContentCommand";
import { UpdateContactFlowMetadataCommandInput, UpdateContactFlowMetadataCommandOutput } from "./commands/UpdateContactFlowMetadataCommand";
import { UpdateContactFlowModuleContentCommandInput, UpdateContactFlowModuleContentCommandOutput } from "./commands/UpdateContactFlowModuleContentCommand";
import { UpdateContactFlowModuleMetadataCommandInput, UpdateContactFlowModuleMetadataCommandOutput } from "./commands/UpdateContactFlowModuleMetadataCommand";
import { UpdateContactFlowNameCommandInput, UpdateContactFlowNameCommandOutput } from "./commands/UpdateContactFlowNameCommand";
import { UpdateContactScheduleCommandInput, UpdateContactScheduleCommandOutput } from "./commands/UpdateContactScheduleCommand";
import { UpdateHoursOfOperationCommandInput, UpdateHoursOfOperationCommandOutput } from "./commands/UpdateHoursOfOperationCommand";
import { UpdateInstanceAttributeCommandInput, UpdateInstanceAttributeCommandOutput } from "./commands/UpdateInstanceAttributeCommand";
import { UpdateInstanceStorageConfigCommandInput, UpdateInstanceStorageConfigCommandOutput } from "./commands/UpdateInstanceStorageConfigCommand";
import { UpdateQueueHoursOfOperationCommandInput, UpdateQueueHoursOfOperationCommandOutput } from "./commands/UpdateQueueHoursOfOperationCommand";
import { UpdateQueueMaxContactsCommandInput, UpdateQueueMaxContactsCommandOutput } from "./commands/UpdateQueueMaxContactsCommand";
import { UpdateQueueNameCommandInput, UpdateQueueNameCommandOutput } from "./commands/UpdateQueueNameCommand";
import { UpdateQueueOutboundCallerConfigCommandInput, UpdateQueueOutboundCallerConfigCommandOutput } from "./commands/UpdateQueueOutboundCallerConfigCommand";
import { UpdateQueueStatusCommandInput, UpdateQueueStatusCommandOutput } from "./commands/UpdateQueueStatusCommand";
import { UpdateQuickConnectConfigCommandInput, UpdateQuickConnectConfigCommandOutput } from "./commands/UpdateQuickConnectConfigCommand";
import { UpdateQuickConnectNameCommandInput, UpdateQuickConnectNameCommandOutput } from "./commands/UpdateQuickConnectNameCommand";
import { UpdateRoutingProfileConcurrencyCommandInput, UpdateRoutingProfileConcurrencyCommandOutput } from "./commands/UpdateRoutingProfileConcurrencyCommand";
import { UpdateRoutingProfileDefaultOutboundQueueCommandInput, UpdateRoutingProfileDefaultOutboundQueueCommandOutput } from "./commands/UpdateRoutingProfileDefaultOutboundQueueCommand";
import { UpdateRoutingProfileNameCommandInput, UpdateRoutingProfileNameCommandOutput } from "./commands/UpdateRoutingProfileNameCommand";
import { UpdateRoutingProfileQueuesCommandInput, UpdateRoutingProfileQueuesCommandOutput } from "./commands/UpdateRoutingProfileQueuesCommand";
import { UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput } from "./commands/UpdateSecurityProfileCommand";
import { UpdateUserHierarchyCommandInput, UpdateUserHierarchyCommandOutput } from "./commands/UpdateUserHierarchyCommand";
import { UpdateUserHierarchyGroupNameCommandInput, UpdateUserHierarchyGroupNameCommandOutput } from "./commands/UpdateUserHierarchyGroupNameCommand";
import { UpdateUserHierarchyStructureCommandInput, UpdateUserHierarchyStructureCommandOutput } from "./commands/UpdateUserHierarchyStructureCommand";
import { UpdateUserIdentityInfoCommandInput, UpdateUserIdentityInfoCommandOutput } from "./commands/UpdateUserIdentityInfoCommand";
import { UpdateUserPhoneConfigCommandInput, UpdateUserPhoneConfigCommandOutput } from "./commands/UpdateUserPhoneConfigCommand";
import { UpdateUserRoutingProfileCommandInput, UpdateUserRoutingProfileCommandOutput } from "./commands/UpdateUserRoutingProfileCommand";
import { UpdateUserSecurityProfilesCommandInput, UpdateUserSecurityProfilesCommandOutput } from "./commands/UpdateUserSecurityProfilesCommand";
import { ConnectClient } from "./ConnectClient";

export declare class Connect extends ConnectClient {
    
    associateApprovedOrigin(args: AssociateApprovedOriginCommandInput, options?: __HttpHandlerOptions): Promise<AssociateApprovedOriginCommandOutput>;
    associateApprovedOrigin(args: AssociateApprovedOriginCommandInput, cb: (err: any, data?: AssociateApprovedOriginCommandOutput) => void): void;
    associateApprovedOrigin(args: AssociateApprovedOriginCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateApprovedOriginCommandOutput) => void): void;
    
    associateBot(args: AssociateBotCommandInput, options?: __HttpHandlerOptions): Promise<AssociateBotCommandOutput>;
    associateBot(args: AssociateBotCommandInput, cb: (err: any, data?: AssociateBotCommandOutput) => void): void;
    associateBot(args: AssociateBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateBotCommandOutput) => void): void;
    
    associateDefaultVocabulary(args: AssociateDefaultVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<AssociateDefaultVocabularyCommandOutput>;
    associateDefaultVocabulary(args: AssociateDefaultVocabularyCommandInput, cb: (err: any, data?: AssociateDefaultVocabularyCommandOutput) => void): void;
    associateDefaultVocabulary(args: AssociateDefaultVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateDefaultVocabularyCommandOutput) => void): void;
    
    associateInstanceStorageConfig(args: AssociateInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<AssociateInstanceStorageConfigCommandOutput>;
    associateInstanceStorageConfig(args: AssociateInstanceStorageConfigCommandInput, cb: (err: any, data?: AssociateInstanceStorageConfigCommandOutput) => void): void;
    associateInstanceStorageConfig(args: AssociateInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateInstanceStorageConfigCommandOutput) => void): void;
    
    associateLambdaFunction(args: AssociateLambdaFunctionCommandInput, options?: __HttpHandlerOptions): Promise<AssociateLambdaFunctionCommandOutput>;
    associateLambdaFunction(args: AssociateLambdaFunctionCommandInput, cb: (err: any, data?: AssociateLambdaFunctionCommandOutput) => void): void;
    associateLambdaFunction(args: AssociateLambdaFunctionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateLambdaFunctionCommandOutput) => void): void;
    
    associateLexBot(args: AssociateLexBotCommandInput, options?: __HttpHandlerOptions): Promise<AssociateLexBotCommandOutput>;
    associateLexBot(args: AssociateLexBotCommandInput, cb: (err: any, data?: AssociateLexBotCommandOutput) => void): void;
    associateLexBot(args: AssociateLexBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateLexBotCommandOutput) => void): void;
    
    associateQueueQuickConnects(args: AssociateQueueQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<AssociateQueueQuickConnectsCommandOutput>;
    associateQueueQuickConnects(args: AssociateQueueQuickConnectsCommandInput, cb: (err: any, data?: AssociateQueueQuickConnectsCommandOutput) => void): void;
    associateQueueQuickConnects(args: AssociateQueueQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateQueueQuickConnectsCommandOutput) => void): void;
    
    associateRoutingProfileQueues(args: AssociateRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<AssociateRoutingProfileQueuesCommandOutput>;
    associateRoutingProfileQueues(args: AssociateRoutingProfileQueuesCommandInput, cb: (err: any, data?: AssociateRoutingProfileQueuesCommandOutput) => void): void;
    associateRoutingProfileQueues(args: AssociateRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateRoutingProfileQueuesCommandOutput) => void): void;
    
    associateSecurityKey(args: AssociateSecurityKeyCommandInput, options?: __HttpHandlerOptions): Promise<AssociateSecurityKeyCommandOutput>;
    associateSecurityKey(args: AssociateSecurityKeyCommandInput, cb: (err: any, data?: AssociateSecurityKeyCommandOutput) => void): void;
    associateSecurityKey(args: AssociateSecurityKeyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateSecurityKeyCommandOutput) => void): void;
    
    createAgentStatus(args: CreateAgentStatusCommandInput, options?: __HttpHandlerOptions): Promise<CreateAgentStatusCommandOutput>;
    createAgentStatus(args: CreateAgentStatusCommandInput, cb: (err: any, data?: CreateAgentStatusCommandOutput) => void): void;
    createAgentStatus(args: CreateAgentStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAgentStatusCommandOutput) => void): void;
    
    createContactFlow(args: CreateContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<CreateContactFlowCommandOutput>;
    createContactFlow(args: CreateContactFlowCommandInput, cb: (err: any, data?: CreateContactFlowCommandOutput) => void): void;
    createContactFlow(args: CreateContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContactFlowCommandOutput) => void): void;
    
    createContactFlowModule(args: CreateContactFlowModuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateContactFlowModuleCommandOutput>;
    createContactFlowModule(args: CreateContactFlowModuleCommandInput, cb: (err: any, data?: CreateContactFlowModuleCommandOutput) => void): void;
    createContactFlowModule(args: CreateContactFlowModuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContactFlowModuleCommandOutput) => void): void;
    
    createHoursOfOperation(args: CreateHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<CreateHoursOfOperationCommandOutput>;
    createHoursOfOperation(args: CreateHoursOfOperationCommandInput, cb: (err: any, data?: CreateHoursOfOperationCommandOutput) => void): void;
    createHoursOfOperation(args: CreateHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateHoursOfOperationCommandOutput) => void): void;
    
    createInstance(args: CreateInstanceCommandInput, options?: __HttpHandlerOptions): Promise<CreateInstanceCommandOutput>;
    createInstance(args: CreateInstanceCommandInput, cb: (err: any, data?: CreateInstanceCommandOutput) => void): void;
    createInstance(args: CreateInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateInstanceCommandOutput) => void): void;
    
    createIntegrationAssociation(args: CreateIntegrationAssociationCommandInput, options?: __HttpHandlerOptions): Promise<CreateIntegrationAssociationCommandOutput>;
    createIntegrationAssociation(args: CreateIntegrationAssociationCommandInput, cb: (err: any, data?: CreateIntegrationAssociationCommandOutput) => void): void;
    createIntegrationAssociation(args: CreateIntegrationAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateIntegrationAssociationCommandOutput) => void): void;
    
    createQueue(args: CreateQueueCommandInput, options?: __HttpHandlerOptions): Promise<CreateQueueCommandOutput>;
    createQueue(args: CreateQueueCommandInput, cb: (err: any, data?: CreateQueueCommandOutput) => void): void;
    createQueue(args: CreateQueueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateQueueCommandOutput) => void): void;
    
    createQuickConnect(args: CreateQuickConnectCommandInput, options?: __HttpHandlerOptions): Promise<CreateQuickConnectCommandOutput>;
    createQuickConnect(args: CreateQuickConnectCommandInput, cb: (err: any, data?: CreateQuickConnectCommandOutput) => void): void;
    createQuickConnect(args: CreateQuickConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateQuickConnectCommandOutput) => void): void;
    
    createRoutingProfile(args: CreateRoutingProfileCommandInput, options?: __HttpHandlerOptions): Promise<CreateRoutingProfileCommandOutput>;
    createRoutingProfile(args: CreateRoutingProfileCommandInput, cb: (err: any, data?: CreateRoutingProfileCommandOutput) => void): void;
    createRoutingProfile(args: CreateRoutingProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRoutingProfileCommandOutput) => void): void;
    
    createSecurityProfile(args: CreateSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<CreateSecurityProfileCommandOutput>;
    createSecurityProfile(args: CreateSecurityProfileCommandInput, cb: (err: any, data?: CreateSecurityProfileCommandOutput) => void): void;
    createSecurityProfile(args: CreateSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSecurityProfileCommandOutput) => void): void;
    
    createUseCase(args: CreateUseCaseCommandInput, options?: __HttpHandlerOptions): Promise<CreateUseCaseCommandOutput>;
    createUseCase(args: CreateUseCaseCommandInput, cb: (err: any, data?: CreateUseCaseCommandOutput) => void): void;
    createUseCase(args: CreateUseCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUseCaseCommandOutput) => void): void;
    
    createUser(args: CreateUserCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserCommandOutput>;
    createUser(args: CreateUserCommandInput, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
    createUser(args: CreateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
    
    createUserHierarchyGroup(args: CreateUserHierarchyGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserHierarchyGroupCommandOutput>;
    createUserHierarchyGroup(args: CreateUserHierarchyGroupCommandInput, cb: (err: any, data?: CreateUserHierarchyGroupCommandOutput) => void): void;
    createUserHierarchyGroup(args: CreateUserHierarchyGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserHierarchyGroupCommandOutput) => void): void;
    
    createVocabulary(args: CreateVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<CreateVocabularyCommandOutput>;
    createVocabulary(args: CreateVocabularyCommandInput, cb: (err: any, data?: CreateVocabularyCommandOutput) => void): void;
    createVocabulary(args: CreateVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVocabularyCommandOutput) => void): void;
    
    deleteContactFlow(args: DeleteContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContactFlowCommandOutput>;
    deleteContactFlow(args: DeleteContactFlowCommandInput, cb: (err: any, data?: DeleteContactFlowCommandOutput) => void): void;
    deleteContactFlow(args: DeleteContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContactFlowCommandOutput) => void): void;
    
    deleteContactFlowModule(args: DeleteContactFlowModuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContactFlowModuleCommandOutput>;
    deleteContactFlowModule(args: DeleteContactFlowModuleCommandInput, cb: (err: any, data?: DeleteContactFlowModuleCommandOutput) => void): void;
    deleteContactFlowModule(args: DeleteContactFlowModuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContactFlowModuleCommandOutput) => void): void;
    
    deleteHoursOfOperation(args: DeleteHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteHoursOfOperationCommandOutput>;
    deleteHoursOfOperation(args: DeleteHoursOfOperationCommandInput, cb: (err: any, data?: DeleteHoursOfOperationCommandOutput) => void): void;
    deleteHoursOfOperation(args: DeleteHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteHoursOfOperationCommandOutput) => void): void;
    
    deleteInstance(args: DeleteInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteInstanceCommandOutput>;
    deleteInstance(args: DeleteInstanceCommandInput, cb: (err: any, data?: DeleteInstanceCommandOutput) => void): void;
    deleteInstance(args: DeleteInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteInstanceCommandOutput) => void): void;
    
    deleteIntegrationAssociation(args: DeleteIntegrationAssociationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteIntegrationAssociationCommandOutput>;
    deleteIntegrationAssociation(args: DeleteIntegrationAssociationCommandInput, cb: (err: any, data?: DeleteIntegrationAssociationCommandOutput) => void): void;
    deleteIntegrationAssociation(args: DeleteIntegrationAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteIntegrationAssociationCommandOutput) => void): void;
    
    deleteQuickConnect(args: DeleteQuickConnectCommandInput, options?: __HttpHandlerOptions): Promise<DeleteQuickConnectCommandOutput>;
    deleteQuickConnect(args: DeleteQuickConnectCommandInput, cb: (err: any, data?: DeleteQuickConnectCommandOutput) => void): void;
    deleteQuickConnect(args: DeleteQuickConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteQuickConnectCommandOutput) => void): void;
    
    deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSecurityProfileCommandOutput>;
    deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, cb: (err: any, data?: DeleteSecurityProfileCommandOutput) => void): void;
    deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSecurityProfileCommandOutput) => void): void;
    
    deleteUseCase(args: DeleteUseCaseCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUseCaseCommandOutput>;
    deleteUseCase(args: DeleteUseCaseCommandInput, cb: (err: any, data?: DeleteUseCaseCommandOutput) => void): void;
    deleteUseCase(args: DeleteUseCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUseCaseCommandOutput) => void): void;
    
    deleteUser(args: DeleteUserCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUserCommandOutput>;
    deleteUser(args: DeleteUserCommandInput, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
    deleteUser(args: DeleteUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
    
    deleteUserHierarchyGroup(args: DeleteUserHierarchyGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUserHierarchyGroupCommandOutput>;
    deleteUserHierarchyGroup(args: DeleteUserHierarchyGroupCommandInput, cb: (err: any, data?: DeleteUserHierarchyGroupCommandOutput) => void): void;
    deleteUserHierarchyGroup(args: DeleteUserHierarchyGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUserHierarchyGroupCommandOutput) => void): void;
    
    deleteVocabulary(args: DeleteVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVocabularyCommandOutput>;
    deleteVocabulary(args: DeleteVocabularyCommandInput, cb: (err: any, data?: DeleteVocabularyCommandOutput) => void): void;
    deleteVocabulary(args: DeleteVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVocabularyCommandOutput) => void): void;
    
    describeAgentStatus(args: DescribeAgentStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAgentStatusCommandOutput>;
    describeAgentStatus(args: DescribeAgentStatusCommandInput, cb: (err: any, data?: DescribeAgentStatusCommandOutput) => void): void;
    describeAgentStatus(args: DescribeAgentStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAgentStatusCommandOutput) => void): void;
    
    describeContact(args: DescribeContactCommandInput, options?: __HttpHandlerOptions): Promise<DescribeContactCommandOutput>;
    describeContact(args: DescribeContactCommandInput, cb: (err: any, data?: DescribeContactCommandOutput) => void): void;
    describeContact(args: DescribeContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeContactCommandOutput) => void): void;
    
    describeContactFlow(args: DescribeContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<DescribeContactFlowCommandOutput>;
    describeContactFlow(args: DescribeContactFlowCommandInput, cb: (err: any, data?: DescribeContactFlowCommandOutput) => void): void;
    describeContactFlow(args: DescribeContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeContactFlowCommandOutput) => void): void;
    
    describeContactFlowModule(args: DescribeContactFlowModuleCommandInput, options?: __HttpHandlerOptions): Promise<DescribeContactFlowModuleCommandOutput>;
    describeContactFlowModule(args: DescribeContactFlowModuleCommandInput, cb: (err: any, data?: DescribeContactFlowModuleCommandOutput) => void): void;
    describeContactFlowModule(args: DescribeContactFlowModuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeContactFlowModuleCommandOutput) => void): void;
    
    describeHoursOfOperation(args: DescribeHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHoursOfOperationCommandOutput>;
    describeHoursOfOperation(args: DescribeHoursOfOperationCommandInput, cb: (err: any, data?: DescribeHoursOfOperationCommandOutput) => void): void;
    describeHoursOfOperation(args: DescribeHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHoursOfOperationCommandOutput) => void): void;
    
    describeInstance(args: DescribeInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceCommandOutput>;
    describeInstance(args: DescribeInstanceCommandInput, cb: (err: any, data?: DescribeInstanceCommandOutput) => void): void;
    describeInstance(args: DescribeInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceCommandOutput) => void): void;
    
    describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceAttributeCommandOutput>;
    describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, cb: (err: any, data?: DescribeInstanceAttributeCommandOutput) => void): void;
    describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceAttributeCommandOutput) => void): void;
    
    describeInstanceStorageConfig(args: DescribeInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceStorageConfigCommandOutput>;
    describeInstanceStorageConfig(args: DescribeInstanceStorageConfigCommandInput, cb: (err: any, data?: DescribeInstanceStorageConfigCommandOutput) => void): void;
    describeInstanceStorageConfig(args: DescribeInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceStorageConfigCommandOutput) => void): void;
    
    describeQueue(args: DescribeQueueCommandInput, options?: __HttpHandlerOptions): Promise<DescribeQueueCommandOutput>;
    describeQueue(args: DescribeQueueCommandInput, cb: (err: any, data?: DescribeQueueCommandOutput) => void): void;
    describeQueue(args: DescribeQueueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeQueueCommandOutput) => void): void;
    
    describeQuickConnect(args: DescribeQuickConnectCommandInput, options?: __HttpHandlerOptions): Promise<DescribeQuickConnectCommandOutput>;
    describeQuickConnect(args: DescribeQuickConnectCommandInput, cb: (err: any, data?: DescribeQuickConnectCommandOutput) => void): void;
    describeQuickConnect(args: DescribeQuickConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeQuickConnectCommandOutput) => void): void;
    
    describeRoutingProfile(args: DescribeRoutingProfileCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRoutingProfileCommandOutput>;
    describeRoutingProfile(args: DescribeRoutingProfileCommandInput, cb: (err: any, data?: DescribeRoutingProfileCommandOutput) => void): void;
    describeRoutingProfile(args: DescribeRoutingProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRoutingProfileCommandOutput) => void): void;
    
    describeSecurityProfile(args: DescribeSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityProfileCommandOutput>;
    describeSecurityProfile(args: DescribeSecurityProfileCommandInput, cb: (err: any, data?: DescribeSecurityProfileCommandOutput) => void): void;
    describeSecurityProfile(args: DescribeSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityProfileCommandOutput) => void): void;
    
    describeUser(args: DescribeUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserCommandOutput>;
    describeUser(args: DescribeUserCommandInput, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
    describeUser(args: DescribeUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
    
    describeUserHierarchyGroup(args: DescribeUserHierarchyGroupCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserHierarchyGroupCommandOutput>;
    describeUserHierarchyGroup(args: DescribeUserHierarchyGroupCommandInput, cb: (err: any, data?: DescribeUserHierarchyGroupCommandOutput) => void): void;
    describeUserHierarchyGroup(args: DescribeUserHierarchyGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserHierarchyGroupCommandOutput) => void): void;
    
    describeUserHierarchyStructure(args: DescribeUserHierarchyStructureCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserHierarchyStructureCommandOutput>;
    describeUserHierarchyStructure(args: DescribeUserHierarchyStructureCommandInput, cb: (err: any, data?: DescribeUserHierarchyStructureCommandOutput) => void): void;
    describeUserHierarchyStructure(args: DescribeUserHierarchyStructureCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserHierarchyStructureCommandOutput) => void): void;
    
    describeVocabulary(args: DescribeVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVocabularyCommandOutput>;
    describeVocabulary(args: DescribeVocabularyCommandInput, cb: (err: any, data?: DescribeVocabularyCommandOutput) => void): void;
    describeVocabulary(args: DescribeVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVocabularyCommandOutput) => void): void;
    
    disassociateApprovedOrigin(args: DisassociateApprovedOriginCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateApprovedOriginCommandOutput>;
    disassociateApprovedOrigin(args: DisassociateApprovedOriginCommandInput, cb: (err: any, data?: DisassociateApprovedOriginCommandOutput) => void): void;
    disassociateApprovedOrigin(args: DisassociateApprovedOriginCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateApprovedOriginCommandOutput) => void): void;
    
    disassociateBot(args: DisassociateBotCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateBotCommandOutput>;
    disassociateBot(args: DisassociateBotCommandInput, cb: (err: any, data?: DisassociateBotCommandOutput) => void): void;
    disassociateBot(args: DisassociateBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateBotCommandOutput) => void): void;
    
    disassociateInstanceStorageConfig(args: DisassociateInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateInstanceStorageConfigCommandOutput>;
    disassociateInstanceStorageConfig(args: DisassociateInstanceStorageConfigCommandInput, cb: (err: any, data?: DisassociateInstanceStorageConfigCommandOutput) => void): void;
    disassociateInstanceStorageConfig(args: DisassociateInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateInstanceStorageConfigCommandOutput) => void): void;
    
    disassociateLambdaFunction(args: DisassociateLambdaFunctionCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateLambdaFunctionCommandOutput>;
    disassociateLambdaFunction(args: DisassociateLambdaFunctionCommandInput, cb: (err: any, data?: DisassociateLambdaFunctionCommandOutput) => void): void;
    disassociateLambdaFunction(args: DisassociateLambdaFunctionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateLambdaFunctionCommandOutput) => void): void;
    
    disassociateLexBot(args: DisassociateLexBotCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateLexBotCommandOutput>;
    disassociateLexBot(args: DisassociateLexBotCommandInput, cb: (err: any, data?: DisassociateLexBotCommandOutput) => void): void;
    disassociateLexBot(args: DisassociateLexBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateLexBotCommandOutput) => void): void;
    
    disassociateQueueQuickConnects(args: DisassociateQueueQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateQueueQuickConnectsCommandOutput>;
    disassociateQueueQuickConnects(args: DisassociateQueueQuickConnectsCommandInput, cb: (err: any, data?: DisassociateQueueQuickConnectsCommandOutput) => void): void;
    disassociateQueueQuickConnects(args: DisassociateQueueQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateQueueQuickConnectsCommandOutput) => void): void;
    
    disassociateRoutingProfileQueues(args: DisassociateRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateRoutingProfileQueuesCommandOutput>;
    disassociateRoutingProfileQueues(args: DisassociateRoutingProfileQueuesCommandInput, cb: (err: any, data?: DisassociateRoutingProfileQueuesCommandOutput) => void): void;
    disassociateRoutingProfileQueues(args: DisassociateRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateRoutingProfileQueuesCommandOutput) => void): void;
    
    disassociateSecurityKey(args: DisassociateSecurityKeyCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateSecurityKeyCommandOutput>;
    disassociateSecurityKey(args: DisassociateSecurityKeyCommandInput, cb: (err: any, data?: DisassociateSecurityKeyCommandOutput) => void): void;
    disassociateSecurityKey(args: DisassociateSecurityKeyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateSecurityKeyCommandOutput) => void): void;
    
    getContactAttributes(args: GetContactAttributesCommandInput, options?: __HttpHandlerOptions): Promise<GetContactAttributesCommandOutput>;
    getContactAttributes(args: GetContactAttributesCommandInput, cb: (err: any, data?: GetContactAttributesCommandOutput) => void): void;
    getContactAttributes(args: GetContactAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetContactAttributesCommandOutput) => void): void;
    
    getCurrentMetricData(args: GetCurrentMetricDataCommandInput, options?: __HttpHandlerOptions): Promise<GetCurrentMetricDataCommandOutput>;
    getCurrentMetricData(args: GetCurrentMetricDataCommandInput, cb: (err: any, data?: GetCurrentMetricDataCommandOutput) => void): void;
    getCurrentMetricData(args: GetCurrentMetricDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCurrentMetricDataCommandOutput) => void): void;
    
    getFederationToken(args: GetFederationTokenCommandInput, options?: __HttpHandlerOptions): Promise<GetFederationTokenCommandOutput>;
    getFederationToken(args: GetFederationTokenCommandInput, cb: (err: any, data?: GetFederationTokenCommandOutput) => void): void;
    getFederationToken(args: GetFederationTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetFederationTokenCommandOutput) => void): void;
    
    getMetricData(args: GetMetricDataCommandInput, options?: __HttpHandlerOptions): Promise<GetMetricDataCommandOutput>;
    getMetricData(args: GetMetricDataCommandInput, cb: (err: any, data?: GetMetricDataCommandOutput) => void): void;
    getMetricData(args: GetMetricDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMetricDataCommandOutput) => void): void;
    
    listAgentStatuses(args: ListAgentStatusesCommandInput, options?: __HttpHandlerOptions): Promise<ListAgentStatusesCommandOutput>;
    listAgentStatuses(args: ListAgentStatusesCommandInput, cb: (err: any, data?: ListAgentStatusesCommandOutput) => void): void;
    listAgentStatuses(args: ListAgentStatusesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAgentStatusesCommandOutput) => void): void;
    
    listApprovedOrigins(args: ListApprovedOriginsCommandInput, options?: __HttpHandlerOptions): Promise<ListApprovedOriginsCommandOutput>;
    listApprovedOrigins(args: ListApprovedOriginsCommandInput, cb: (err: any, data?: ListApprovedOriginsCommandOutput) => void): void;
    listApprovedOrigins(args: ListApprovedOriginsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListApprovedOriginsCommandOutput) => void): void;
    
    listBots(args: ListBotsCommandInput, options?: __HttpHandlerOptions): Promise<ListBotsCommandOutput>;
    listBots(args: ListBotsCommandInput, cb: (err: any, data?: ListBotsCommandOutput) => void): void;
    listBots(args: ListBotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBotsCommandOutput) => void): void;
    
    listContactFlowModules(args: ListContactFlowModulesCommandInput, options?: __HttpHandlerOptions): Promise<ListContactFlowModulesCommandOutput>;
    listContactFlowModules(args: ListContactFlowModulesCommandInput, cb: (err: any, data?: ListContactFlowModulesCommandOutput) => void): void;
    listContactFlowModules(args: ListContactFlowModulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactFlowModulesCommandOutput) => void): void;
    
    listContactFlows(args: ListContactFlowsCommandInput, options?: __HttpHandlerOptions): Promise<ListContactFlowsCommandOutput>;
    listContactFlows(args: ListContactFlowsCommandInput, cb: (err: any, data?: ListContactFlowsCommandOutput) => void): void;
    listContactFlows(args: ListContactFlowsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactFlowsCommandOutput) => void): void;
    
    listContactReferences(args: ListContactReferencesCommandInput, options?: __HttpHandlerOptions): Promise<ListContactReferencesCommandOutput>;
    listContactReferences(args: ListContactReferencesCommandInput, cb: (err: any, data?: ListContactReferencesCommandOutput) => void): void;
    listContactReferences(args: ListContactReferencesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactReferencesCommandOutput) => void): void;
    
    listDefaultVocabularies(args: ListDefaultVocabulariesCommandInput, options?: __HttpHandlerOptions): Promise<ListDefaultVocabulariesCommandOutput>;
    listDefaultVocabularies(args: ListDefaultVocabulariesCommandInput, cb: (err: any, data?: ListDefaultVocabulariesCommandOutput) => void): void;
    listDefaultVocabularies(args: ListDefaultVocabulariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDefaultVocabulariesCommandOutput) => void): void;
    
    listHoursOfOperations(args: ListHoursOfOperationsCommandInput, options?: __HttpHandlerOptions): Promise<ListHoursOfOperationsCommandOutput>;
    listHoursOfOperations(args: ListHoursOfOperationsCommandInput, cb: (err: any, data?: ListHoursOfOperationsCommandOutput) => void): void;
    listHoursOfOperations(args: ListHoursOfOperationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListHoursOfOperationsCommandOutput) => void): void;
    
    listInstanceAttributes(args: ListInstanceAttributesCommandInput, options?: __HttpHandlerOptions): Promise<ListInstanceAttributesCommandOutput>;
    listInstanceAttributes(args: ListInstanceAttributesCommandInput, cb: (err: any, data?: ListInstanceAttributesCommandOutput) => void): void;
    listInstanceAttributes(args: ListInstanceAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstanceAttributesCommandOutput) => void): void;
    
    listInstances(args: ListInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ListInstancesCommandOutput>;
    listInstances(args: ListInstancesCommandInput, cb: (err: any, data?: ListInstancesCommandOutput) => void): void;
    listInstances(args: ListInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstancesCommandOutput) => void): void;
    
    listInstanceStorageConfigs(args: ListInstanceStorageConfigsCommandInput, options?: __HttpHandlerOptions): Promise<ListInstanceStorageConfigsCommandOutput>;
    listInstanceStorageConfigs(args: ListInstanceStorageConfigsCommandInput, cb: (err: any, data?: ListInstanceStorageConfigsCommandOutput) => void): void;
    listInstanceStorageConfigs(args: ListInstanceStorageConfigsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstanceStorageConfigsCommandOutput) => void): void;
    
    listIntegrationAssociations(args: ListIntegrationAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<ListIntegrationAssociationsCommandOutput>;
    listIntegrationAssociations(args: ListIntegrationAssociationsCommandInput, cb: (err: any, data?: ListIntegrationAssociationsCommandOutput) => void): void;
    listIntegrationAssociations(args: ListIntegrationAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListIntegrationAssociationsCommandOutput) => void): void;
    
    listLambdaFunctions(args: ListLambdaFunctionsCommandInput, options?: __HttpHandlerOptions): Promise<ListLambdaFunctionsCommandOutput>;
    listLambdaFunctions(args: ListLambdaFunctionsCommandInput, cb: (err: any, data?: ListLambdaFunctionsCommandOutput) => void): void;
    listLambdaFunctions(args: ListLambdaFunctionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLambdaFunctionsCommandOutput) => void): void;
    
    listLexBots(args: ListLexBotsCommandInput, options?: __HttpHandlerOptions): Promise<ListLexBotsCommandOutput>;
    listLexBots(args: ListLexBotsCommandInput, cb: (err: any, data?: ListLexBotsCommandOutput) => void): void;
    listLexBots(args: ListLexBotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLexBotsCommandOutput) => void): void;
    
    listPhoneNumbers(args: ListPhoneNumbersCommandInput, options?: __HttpHandlerOptions): Promise<ListPhoneNumbersCommandOutput>;
    listPhoneNumbers(args: ListPhoneNumbersCommandInput, cb: (err: any, data?: ListPhoneNumbersCommandOutput) => void): void;
    listPhoneNumbers(args: ListPhoneNumbersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPhoneNumbersCommandOutput) => void): void;
    
    listPrompts(args: ListPromptsCommandInput, options?: __HttpHandlerOptions): Promise<ListPromptsCommandOutput>;
    listPrompts(args: ListPromptsCommandInput, cb: (err: any, data?: ListPromptsCommandOutput) => void): void;
    listPrompts(args: ListPromptsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPromptsCommandOutput) => void): void;
    
    listQueueQuickConnects(args: ListQueueQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<ListQueueQuickConnectsCommandOutput>;
    listQueueQuickConnects(args: ListQueueQuickConnectsCommandInput, cb: (err: any, data?: ListQueueQuickConnectsCommandOutput) => void): void;
    listQueueQuickConnects(args: ListQueueQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListQueueQuickConnectsCommandOutput) => void): void;
    
    listQueues(args: ListQueuesCommandInput, options?: __HttpHandlerOptions): Promise<ListQueuesCommandOutput>;
    listQueues(args: ListQueuesCommandInput, cb: (err: any, data?: ListQueuesCommandOutput) => void): void;
    listQueues(args: ListQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListQueuesCommandOutput) => void): void;
    
    listQuickConnects(args: ListQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<ListQuickConnectsCommandOutput>;
    listQuickConnects(args: ListQuickConnectsCommandInput, cb: (err: any, data?: ListQuickConnectsCommandOutput) => void): void;
    listQuickConnects(args: ListQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListQuickConnectsCommandOutput) => void): void;
    
    listRoutingProfileQueues(args: ListRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<ListRoutingProfileQueuesCommandOutput>;
    listRoutingProfileQueues(args: ListRoutingProfileQueuesCommandInput, cb: (err: any, data?: ListRoutingProfileQueuesCommandOutput) => void): void;
    listRoutingProfileQueues(args: ListRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoutingProfileQueuesCommandOutput) => void): void;
    
    listRoutingProfiles(args: ListRoutingProfilesCommandInput, options?: __HttpHandlerOptions): Promise<ListRoutingProfilesCommandOutput>;
    listRoutingProfiles(args: ListRoutingProfilesCommandInput, cb: (err: any, data?: ListRoutingProfilesCommandOutput) => void): void;
    listRoutingProfiles(args: ListRoutingProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoutingProfilesCommandOutput) => void): void;
    
    listSecurityKeys(args: ListSecurityKeysCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityKeysCommandOutput>;
    listSecurityKeys(args: ListSecurityKeysCommandInput, cb: (err: any, data?: ListSecurityKeysCommandOutput) => void): void;
    listSecurityKeys(args: ListSecurityKeysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityKeysCommandOutput) => void): void;
    
    listSecurityProfilePermissions(args: ListSecurityProfilePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityProfilePermissionsCommandOutput>;
    listSecurityProfilePermissions(args: ListSecurityProfilePermissionsCommandInput, cb: (err: any, data?: ListSecurityProfilePermissionsCommandOutput) => void): void;
    listSecurityProfilePermissions(args: ListSecurityProfilePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityProfilePermissionsCommandOutput) => void): void;
    
    listSecurityProfiles(args: ListSecurityProfilesCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityProfilesCommandOutput>;
    listSecurityProfiles(args: ListSecurityProfilesCommandInput, cb: (err: any, data?: ListSecurityProfilesCommandOutput) => void): void;
    listSecurityProfiles(args: ListSecurityProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityProfilesCommandOutput) => void): void;
    
    listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    
    listUseCases(args: ListUseCasesCommandInput, options?: __HttpHandlerOptions): Promise<ListUseCasesCommandOutput>;
    listUseCases(args: ListUseCasesCommandInput, cb: (err: any, data?: ListUseCasesCommandOutput) => void): void;
    listUseCases(args: ListUseCasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUseCasesCommandOutput) => void): void;
    
    listUserHierarchyGroups(args: ListUserHierarchyGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListUserHierarchyGroupsCommandOutput>;
    listUserHierarchyGroups(args: ListUserHierarchyGroupsCommandInput, cb: (err: any, data?: ListUserHierarchyGroupsCommandOutput) => void): void;
    listUserHierarchyGroups(args: ListUserHierarchyGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUserHierarchyGroupsCommandOutput) => void): void;
    
    listUsers(args: ListUsersCommandInput, options?: __HttpHandlerOptions): Promise<ListUsersCommandOutput>;
    listUsers(args: ListUsersCommandInput, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
    listUsers(args: ListUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
    
    resumeContactRecording(args: ResumeContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<ResumeContactRecordingCommandOutput>;
    resumeContactRecording(args: ResumeContactRecordingCommandInput, cb: (err: any, data?: ResumeContactRecordingCommandOutput) => void): void;
    resumeContactRecording(args: ResumeContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResumeContactRecordingCommandOutput) => void): void;
    
    searchVocabularies(args: SearchVocabulariesCommandInput, options?: __HttpHandlerOptions): Promise<SearchVocabulariesCommandOutput>;
    searchVocabularies(args: SearchVocabulariesCommandInput, cb: (err: any, data?: SearchVocabulariesCommandOutput) => void): void;
    searchVocabularies(args: SearchVocabulariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchVocabulariesCommandOutput) => void): void;
    
    startChatContact(args: StartChatContactCommandInput, options?: __HttpHandlerOptions): Promise<StartChatContactCommandOutput>;
    startChatContact(args: StartChatContactCommandInput, cb: (err: any, data?: StartChatContactCommandOutput) => void): void;
    startChatContact(args: StartChatContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartChatContactCommandOutput) => void): void;
    
    startContactRecording(args: StartContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<StartContactRecordingCommandOutput>;
    startContactRecording(args: StartContactRecordingCommandInput, cb: (err: any, data?: StartContactRecordingCommandOutput) => void): void;
    startContactRecording(args: StartContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartContactRecordingCommandOutput) => void): void;
    
    startContactStreaming(args: StartContactStreamingCommandInput, options?: __HttpHandlerOptions): Promise<StartContactStreamingCommandOutput>;
    startContactStreaming(args: StartContactStreamingCommandInput, cb: (err: any, data?: StartContactStreamingCommandOutput) => void): void;
    startContactStreaming(args: StartContactStreamingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartContactStreamingCommandOutput) => void): void;
    
    startOutboundVoiceContact(args: StartOutboundVoiceContactCommandInput, options?: __HttpHandlerOptions): Promise<StartOutboundVoiceContactCommandOutput>;
    startOutboundVoiceContact(args: StartOutboundVoiceContactCommandInput, cb: (err: any, data?: StartOutboundVoiceContactCommandOutput) => void): void;
    startOutboundVoiceContact(args: StartOutboundVoiceContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartOutboundVoiceContactCommandOutput) => void): void;
    
    startTaskContact(args: StartTaskContactCommandInput, options?: __HttpHandlerOptions): Promise<StartTaskContactCommandOutput>;
    startTaskContact(args: StartTaskContactCommandInput, cb: (err: any, data?: StartTaskContactCommandOutput) => void): void;
    startTaskContact(args: StartTaskContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartTaskContactCommandOutput) => void): void;
    
    stopContact(args: StopContactCommandInput, options?: __HttpHandlerOptions): Promise<StopContactCommandOutput>;
    stopContact(args: StopContactCommandInput, cb: (err: any, data?: StopContactCommandOutput) => void): void;
    stopContact(args: StopContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopContactCommandOutput) => void): void;
    
    stopContactRecording(args: StopContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<StopContactRecordingCommandOutput>;
    stopContactRecording(args: StopContactRecordingCommandInput, cb: (err: any, data?: StopContactRecordingCommandOutput) => void): void;
    stopContactRecording(args: StopContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopContactRecordingCommandOutput) => void): void;
    
    stopContactStreaming(args: StopContactStreamingCommandInput, options?: __HttpHandlerOptions): Promise<StopContactStreamingCommandOutput>;
    stopContactStreaming(args: StopContactStreamingCommandInput, cb: (err: any, data?: StopContactStreamingCommandOutput) => void): void;
    stopContactStreaming(args: StopContactStreamingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopContactStreamingCommandOutput) => void): void;
    
    suspendContactRecording(args: SuspendContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<SuspendContactRecordingCommandOutput>;
    suspendContactRecording(args: SuspendContactRecordingCommandInput, cb: (err: any, data?: SuspendContactRecordingCommandOutput) => void): void;
    suspendContactRecording(args: SuspendContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SuspendContactRecordingCommandOutput) => void): void;
    
    tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    
    untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    
    updateAgentStatus(args: UpdateAgentStatusCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAgentStatusCommandOutput>;
    updateAgentStatus(args: UpdateAgentStatusCommandInput, cb: (err: any, data?: UpdateAgentStatusCommandOutput) => void): void;
    updateAgentStatus(args: UpdateAgentStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAgentStatusCommandOutput) => void): void;
    
    updateContact(args: UpdateContactCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactCommandOutput>;
    updateContact(args: UpdateContactCommandInput, cb: (err: any, data?: UpdateContactCommandOutput) => void): void;
    updateContact(args: UpdateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactCommandOutput) => void): void;
    
    updateContactAttributes(args: UpdateContactAttributesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactAttributesCommandOutput>;
    updateContactAttributes(args: UpdateContactAttributesCommandInput, cb: (err: any, data?: UpdateContactAttributesCommandOutput) => void): void;
    updateContactAttributes(args: UpdateContactAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactAttributesCommandOutput) => void): void;
    
    updateContactFlowContent(args: UpdateContactFlowContentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowContentCommandOutput>;
    updateContactFlowContent(args: UpdateContactFlowContentCommandInput, cb: (err: any, data?: UpdateContactFlowContentCommandOutput) => void): void;
    updateContactFlowContent(args: UpdateContactFlowContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowContentCommandOutput) => void): void;
    
    updateContactFlowMetadata(args: UpdateContactFlowMetadataCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowMetadataCommandOutput>;
    updateContactFlowMetadata(args: UpdateContactFlowMetadataCommandInput, cb: (err: any, data?: UpdateContactFlowMetadataCommandOutput) => void): void;
    updateContactFlowMetadata(args: UpdateContactFlowMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowMetadataCommandOutput) => void): void;
    
    updateContactFlowModuleContent(args: UpdateContactFlowModuleContentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowModuleContentCommandOutput>;
    updateContactFlowModuleContent(args: UpdateContactFlowModuleContentCommandInput, cb: (err: any, data?: UpdateContactFlowModuleContentCommandOutput) => void): void;
    updateContactFlowModuleContent(args: UpdateContactFlowModuleContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowModuleContentCommandOutput) => void): void;
    
    updateContactFlowModuleMetadata(args: UpdateContactFlowModuleMetadataCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowModuleMetadataCommandOutput>;
    updateContactFlowModuleMetadata(args: UpdateContactFlowModuleMetadataCommandInput, cb: (err: any, data?: UpdateContactFlowModuleMetadataCommandOutput) => void): void;
    updateContactFlowModuleMetadata(args: UpdateContactFlowModuleMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowModuleMetadataCommandOutput) => void): void;
    
    updateContactFlowName(args: UpdateContactFlowNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowNameCommandOutput>;
    updateContactFlowName(args: UpdateContactFlowNameCommandInput, cb: (err: any, data?: UpdateContactFlowNameCommandOutput) => void): void;
    updateContactFlowName(args: UpdateContactFlowNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowNameCommandOutput) => void): void;
    
    updateContactSchedule(args: UpdateContactScheduleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactScheduleCommandOutput>;
    updateContactSchedule(args: UpdateContactScheduleCommandInput, cb: (err: any, data?: UpdateContactScheduleCommandOutput) => void): void;
    updateContactSchedule(args: UpdateContactScheduleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactScheduleCommandOutput) => void): void;
    
    updateHoursOfOperation(args: UpdateHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateHoursOfOperationCommandOutput>;
    updateHoursOfOperation(args: UpdateHoursOfOperationCommandInput, cb: (err: any, data?: UpdateHoursOfOperationCommandOutput) => void): void;
    updateHoursOfOperation(args: UpdateHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateHoursOfOperationCommandOutput) => void): void;
    
    updateInstanceAttribute(args: UpdateInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<UpdateInstanceAttributeCommandOutput>;
    updateInstanceAttribute(args: UpdateInstanceAttributeCommandInput, cb: (err: any, data?: UpdateInstanceAttributeCommandOutput) => void): void;
    updateInstanceAttribute(args: UpdateInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateInstanceAttributeCommandOutput) => void): void;
    
    updateInstanceStorageConfig(args: UpdateInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateInstanceStorageConfigCommandOutput>;
    updateInstanceStorageConfig(args: UpdateInstanceStorageConfigCommandInput, cb: (err: any, data?: UpdateInstanceStorageConfigCommandOutput) => void): void;
    updateInstanceStorageConfig(args: UpdateInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateInstanceStorageConfigCommandOutput) => void): void;
    
    updateQueueHoursOfOperation(args: UpdateQueueHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueHoursOfOperationCommandOutput>;
    updateQueueHoursOfOperation(args: UpdateQueueHoursOfOperationCommandInput, cb: (err: any, data?: UpdateQueueHoursOfOperationCommandOutput) => void): void;
    updateQueueHoursOfOperation(args: UpdateQueueHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueHoursOfOperationCommandOutput) => void): void;
    
    updateQueueMaxContacts(args: UpdateQueueMaxContactsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueMaxContactsCommandOutput>;
    updateQueueMaxContacts(args: UpdateQueueMaxContactsCommandInput, cb: (err: any, data?: UpdateQueueMaxContactsCommandOutput) => void): void;
    updateQueueMaxContacts(args: UpdateQueueMaxContactsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueMaxContactsCommandOutput) => void): void;
    
    updateQueueName(args: UpdateQueueNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueNameCommandOutput>;
    updateQueueName(args: UpdateQueueNameCommandInput, cb: (err: any, data?: UpdateQueueNameCommandOutput) => void): void;
    updateQueueName(args: UpdateQueueNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueNameCommandOutput) => void): void;
    
    updateQueueOutboundCallerConfig(args: UpdateQueueOutboundCallerConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueOutboundCallerConfigCommandOutput>;
    updateQueueOutboundCallerConfig(args: UpdateQueueOutboundCallerConfigCommandInput, cb: (err: any, data?: UpdateQueueOutboundCallerConfigCommandOutput) => void): void;
    updateQueueOutboundCallerConfig(args: UpdateQueueOutboundCallerConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueOutboundCallerConfigCommandOutput) => void): void;
    
    updateQueueStatus(args: UpdateQueueStatusCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueStatusCommandOutput>;
    updateQueueStatus(args: UpdateQueueStatusCommandInput, cb: (err: any, data?: UpdateQueueStatusCommandOutput) => void): void;
    updateQueueStatus(args: UpdateQueueStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueStatusCommandOutput) => void): void;
    
    updateQuickConnectConfig(args: UpdateQuickConnectConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQuickConnectConfigCommandOutput>;
    updateQuickConnectConfig(args: UpdateQuickConnectConfigCommandInput, cb: (err: any, data?: UpdateQuickConnectConfigCommandOutput) => void): void;
    updateQuickConnectConfig(args: UpdateQuickConnectConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQuickConnectConfigCommandOutput) => void): void;
    
    updateQuickConnectName(args: UpdateQuickConnectNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQuickConnectNameCommandOutput>;
    updateQuickConnectName(args: UpdateQuickConnectNameCommandInput, cb: (err: any, data?: UpdateQuickConnectNameCommandOutput) => void): void;
    updateQuickConnectName(args: UpdateQuickConnectNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQuickConnectNameCommandOutput) => void): void;
    
    updateRoutingProfileConcurrency(args: UpdateRoutingProfileConcurrencyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileConcurrencyCommandOutput>;
    updateRoutingProfileConcurrency(args: UpdateRoutingProfileConcurrencyCommandInput, cb: (err: any, data?: UpdateRoutingProfileConcurrencyCommandOutput) => void): void;
    updateRoutingProfileConcurrency(args: UpdateRoutingProfileConcurrencyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileConcurrencyCommandOutput) => void): void;
    
    updateRoutingProfileDefaultOutboundQueue(args: UpdateRoutingProfileDefaultOutboundQueueCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileDefaultOutboundQueueCommandOutput>;
    updateRoutingProfileDefaultOutboundQueue(args: UpdateRoutingProfileDefaultOutboundQueueCommandInput, cb: (err: any, data?: UpdateRoutingProfileDefaultOutboundQueueCommandOutput) => void): void;
    updateRoutingProfileDefaultOutboundQueue(args: UpdateRoutingProfileDefaultOutboundQueueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileDefaultOutboundQueueCommandOutput) => void): void;
    
    updateRoutingProfileName(args: UpdateRoutingProfileNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileNameCommandOutput>;
    updateRoutingProfileName(args: UpdateRoutingProfileNameCommandInput, cb: (err: any, data?: UpdateRoutingProfileNameCommandOutput) => void): void;
    updateRoutingProfileName(args: UpdateRoutingProfileNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileNameCommandOutput) => void): void;
    
    updateRoutingProfileQueues(args: UpdateRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileQueuesCommandOutput>;
    updateRoutingProfileQueues(args: UpdateRoutingProfileQueuesCommandInput, cb: (err: any, data?: UpdateRoutingProfileQueuesCommandOutput) => void): void;
    updateRoutingProfileQueues(args: UpdateRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileQueuesCommandOutput) => void): void;
    
    updateSecurityProfile(args: UpdateSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSecurityProfileCommandOutput>;
    updateSecurityProfile(args: UpdateSecurityProfileCommandInput, cb: (err: any, data?: UpdateSecurityProfileCommandOutput) => void): void;
    updateSecurityProfile(args: UpdateSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSecurityProfileCommandOutput) => void): void;
    
    updateUserHierarchy(args: UpdateUserHierarchyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserHierarchyCommandOutput>;
    updateUserHierarchy(args: UpdateUserHierarchyCommandInput, cb: (err: any, data?: UpdateUserHierarchyCommandOutput) => void): void;
    updateUserHierarchy(args: UpdateUserHierarchyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserHierarchyCommandOutput) => void): void;
    
    updateUserHierarchyGroupName(args: UpdateUserHierarchyGroupNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserHierarchyGroupNameCommandOutput>;
    updateUserHierarchyGroupName(args: UpdateUserHierarchyGroupNameCommandInput, cb: (err: any, data?: UpdateUserHierarchyGroupNameCommandOutput) => void): void;
    updateUserHierarchyGroupName(args: UpdateUserHierarchyGroupNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserHierarchyGroupNameCommandOutput) => void): void;
    
    updateUserHierarchyStructure(args: UpdateUserHierarchyStructureCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserHierarchyStructureCommandOutput>;
    updateUserHierarchyStructure(args: UpdateUserHierarchyStructureCommandInput, cb: (err: any, data?: UpdateUserHierarchyStructureCommandOutput) => void): void;
    updateUserHierarchyStructure(args: UpdateUserHierarchyStructureCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserHierarchyStructureCommandOutput) => void): void;
    
    updateUserIdentityInfo(args: UpdateUserIdentityInfoCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserIdentityInfoCommandOutput>;
    updateUserIdentityInfo(args: UpdateUserIdentityInfoCommandInput, cb: (err: any, data?: UpdateUserIdentityInfoCommandOutput) => void): void;
    updateUserIdentityInfo(args: UpdateUserIdentityInfoCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserIdentityInfoCommandOutput) => void): void;
    
    updateUserPhoneConfig(args: UpdateUserPhoneConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserPhoneConfigCommandOutput>;
    updateUserPhoneConfig(args: UpdateUserPhoneConfigCommandInput, cb: (err: any, data?: UpdateUserPhoneConfigCommandOutput) => void): void;
    updateUserPhoneConfig(args: UpdateUserPhoneConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserPhoneConfigCommandOutput) => void): void;
    
    updateUserRoutingProfile(args: UpdateUserRoutingProfileCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserRoutingProfileCommandOutput>;
    updateUserRoutingProfile(args: UpdateUserRoutingProfileCommandInput, cb: (err: any, data?: UpdateUserRoutingProfileCommandOutput) => void): void;
    updateUserRoutingProfile(args: UpdateUserRoutingProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserRoutingProfileCommandOutput) => void): void;
    
    updateUserSecurityProfiles(args: UpdateUserSecurityProfilesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserSecurityProfilesCommandOutput>;
    updateUserSecurityProfiles(args: UpdateUserSecurityProfilesCommandInput, cb: (err: any, data?: UpdateUserSecurityProfilesCommandOutput) => void): void;
    updateUserSecurityProfiles(args: UpdateUserSecurityProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserSecurityProfilesCommandOutput) => void): void;
}
