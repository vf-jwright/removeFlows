import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConnectClient";
import { StopContactStreamingRequest, StopContactStreamingResponse } from "../models/models_1";
export interface StopContactStreamingCommandInput extends StopContactStreamingRequest {
}
export interface StopContactStreamingCommandOutput extends StopContactStreamingResponse, __MetadataBearer {
}
/**
 * <p> Ends message streaming on a specified contact. To restart message streaming on that
 *    contact, call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html">StartContactStreaming</a>
 *    API. </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConnectClient, StopContactStreamingCommand } from "@aws-sdk/client-connect"; // ES Modules import
 * // const { ConnectClient, StopContactStreamingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
 * const client = new ConnectClient(config);
 * const command = new StopContactStreamingCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link StopContactStreamingCommandInput} for command's `input` shape.
 * @see {@link StopContactStreamingCommandOutput} for command's `response` shape.
 * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
 *
 */
export declare class StopContactStreamingCommand extends $Command<StopContactStreamingCommandInput, StopContactStreamingCommandOutput, ConnectClientResolvedConfig> {
    readonly input: StopContactStreamingCommandInput;
    constructor(input: StopContactStreamingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopContactStreamingCommandInput, StopContactStreamingCommandOutput>;
    private serialize;
    private deserialize;
}
