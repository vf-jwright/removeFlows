import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConnectClient";
import { CreateVocabularyRequest, CreateVocabularyResponse } from "../models/models_0";
export interface CreateVocabularyCommandInput extends CreateVocabularyRequest {
}
export interface CreateVocabularyCommandOutput extends CreateVocabularyResponse, __MetadataBearer {
}
/**
 * <p>Creates a custom vocabulary associated with your Amazon Connect instance. You can set a custom
 *    vocabulary to be your default vocabulary for a given language. Contact Lens for Amazon Connect uses the default
 *    vocabulary in post-call and real-time contact analysis sessions for that language.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConnectClient, CreateVocabularyCommand } from "@aws-sdk/client-connect"; // ES Modules import
 * // const { ConnectClient, CreateVocabularyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
 * const client = new ConnectClient(config);
 * const command = new CreateVocabularyCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link CreateVocabularyCommandInput} for command's `input` shape.
 * @see {@link CreateVocabularyCommandOutput} for command's `response` shape.
 * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
 *
 */
export declare class CreateVocabularyCommand extends $Command<CreateVocabularyCommandInput, CreateVocabularyCommandOutput, ConnectClientResolvedConfig> {
    readonly input: CreateVocabularyCommandInput;
    constructor(input: CreateVocabularyCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateVocabularyCommandInput, CreateVocabularyCommandOutput>;
    private serialize;
    private deserialize;
}
