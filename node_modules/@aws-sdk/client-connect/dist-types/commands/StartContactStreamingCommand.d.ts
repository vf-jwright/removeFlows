import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConnectClient";
import { StartContactStreamingRequest, StartContactStreamingResponse } from "../models/models_0";
export interface StartContactStreamingCommandInput extends StartContactStreamingRequest {
}
export interface StartContactStreamingCommandOutput extends StartContactStreamingResponse, __MetadataBearer {
}
/**
 * <p> Initiates real-time message streaming for a new chat contact.</p>
 *          <p> For more information about message streaming, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html">Enable real-time chat message
 *     streaming</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConnectClient, StartContactStreamingCommand } from "@aws-sdk/client-connect"; // ES Modules import
 * // const { ConnectClient, StartContactStreamingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
 * const client = new ConnectClient(config);
 * const command = new StartContactStreamingCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link StartContactStreamingCommandInput} for command's `input` shape.
 * @see {@link StartContactStreamingCommandOutput} for command's `response` shape.
 * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
 *
 */
export declare class StartContactStreamingCommand extends $Command<StartContactStreamingCommandInput, StartContactStreamingCommandOutput, ConnectClientResolvedConfig> {
    readonly input: StartContactStreamingCommandInput;
    constructor(input: StartContactStreamingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartContactStreamingCommandInput, StartContactStreamingCommandOutput>;
    private serialize;
    private deserialize;
}
